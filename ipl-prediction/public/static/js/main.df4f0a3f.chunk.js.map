{"version":3,"sources":["viewPort.js","components/loader/loader.jsx","components/about/about.jsx","components/simpleBar/simpleBar.jsx","components/simpleBar/horizontalBar.jsx","components/graph/comparableLineGraph.jsx","components/dataset/dataset.jsx","components/models/models.jsx","components/prediction/prediction.jsx","components/navbar/navbar.jsx","App.js","serviceWorker.js","index.js"],"names":["ViewPortHandler","Object","classCallCheck","this","width","getWidth","heigth","getHeight","Math","max","document","documentElement","clientWidth","window","innerWidth","clientHeight","innerHeight","percent","LoaderAnim","react_default","a","createElement","react_loader_spinner_default","type","color","height","Component","About","_this","possibleConstructorReturn","getPrototypeOf","call","view","state","selectedTab","webData","backendData","webReady","backendReady","selectTab","bind","assertThisInitialized","event","value","target","setState","_this2","fetch","then","res","text","data","className","concat","includes","onClick","style","getWidthAsPX","textAlign","react_markdown_default","source","loader","SimpleBar","props","header","properties","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","mapData","fontFamily","margin","es","options","maintainAspectRatio","HorizontalBarChart","LineGraph","es6","top","right","left","bottom","dataKey","strokeDasharray","stroke","activeDot","r","animationDuration","Dataset","analyticsData","totalAnalyticsData","overallPerformanceData","teamData","headerData","venueData","availableMatchDetails","cityData","cityDataReady","availableMatchDetailsReady","venueReady","headerReady","teamDataReady","overallPerformanceReady","totalAnalyticsReady","analyticsReady","generateSimpleBars","generateHorizontalBarGraph","generateComparableLineGraph","simpleID","map","record","key","simpleBar","getHeightAsPX","horizontalBar","comparableLineGraph","cardWidth","count","toString","replace","length","blob","url","URL","createObjectURL","Blob","link","href","setAttribute","body","appendChild","click","parentNode","removeChild","catch","error","console","log","_this3","analyticDatas","OverallPerformance","json","_","forOwn","temp","teamName","matchesWon","wins","team","push","tempPerformance","teams","marginRight","generateMatchDetail","generateTeamTotalCount","generateVenueTotalCount","generateCityTotalCount","generateVenueData","generateTeamNameData","generateCityData","generateHeadersData","marginTop","marginBottom","src","alt","id","getDataSetAsCSV","getDataSetAsJSON","Models","models","modelsReady","modelEfficiency","modelEfficiencyReady","modelName","modelIteration","modelLearningRate","trainingStarted","validData","modelTrained","generateModelsList","generateModelEfficiency","handleInput","startTraining","checkIfModelReady","downloadModel","downloadOurModel","fontWeight","toFixed","method","headers","Content-Type","JSON","stringify","modelIterations","_this4","_event$target","name","defineProperty","_this5","tempList","forEach","file","efficiency","accuracy","errorRate","errorCount","totalTestData","placeholder","onChange","Predictions","city","team1Selected","team2Selected","teamReady","SchemaReady","tossWinner","tossDecision","winner","Season","SeasonalData","Season2020","Season2021","Season2022","SeasonalDataReady","matchMakingData","finals","predictedOneVsOne","predicted2020Finals","predicted2021Finals","predicted2022Finals","reportsAvailable","reportsData","generateTeamOne","generateTeamTwo","handleSelection","handleTossWinner","handleTossDecision","oneOnOnePrediction","generateMatchMakingSchema","generateReport","SeasonalPrediction","predictFinals","predictOneVsOneFromServer","getReportsData","checked","team1","team2","callback","winner2","losser","winner3","champ","_this2$setState","t1","t2","SemiFinalists","tempMatchMakingData","teamsPresent","record1","_this6","matchData","predictions","es_switch","checkedChildren","unCheckedChildren","NavBar","isClicked","Fragment","data-toggle","data-target","aria-controls","aria-expanded","aria-label","react_router_dom","to","App","navbar","react_router","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.df4f0a3f.chunk.js","sourcesContent":["\r\n\r\n\r\nclass ViewPortHandler {\r\n    constructor() {\r\n        this.width = this.getWidth();\r\n        this.heigth = this.getHeight();\r\n    }\r\n\r\n    getWidth() {\r\n        return Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\r\n    }\r\n\r\n    getHeight() {\r\n        return Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\r\n    }\r\n\r\n    getHeightAsPX(percent) {\r\n        return ((percent/100) * this.heigth);\r\n    }\r\n\r\n    getWidthAsPX(percent) {\r\n        return ((percent/100) * this.width);\r\n    }\r\n\r\n}\r\n\r\nexport default ViewPortHandler;","import React, { Component } from 'react';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\n\r\nclass LoaderAnim extends Component {\r\n    render() {\r\n        return (\r\n            <Loader \r\n                type=\"Triangle\"\r\n                color=\"#8966f6\"\r\n                height={100}\r\n                width={100}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoaderAnim;","import React, { Component } from 'react';\r\nimport MarkDown from 'react-markdown';\r\nimport './subnav.css';\r\nimport './about.css';\r\n\r\nimport ViewPortHandler from '../../viewPort';\r\nimport LoadingAnim from '../loader/loader';\r\n\r\nconst url = \"\"; //\"http://localhost:8080\";\r\n\r\nclass About extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.view = new ViewPortHandler();\r\n        this.state = {\r\n            selectedTab: \"web\",\r\n            webData: \"\",\r\n            backendData: \"\",\r\n            webReady: false,\r\n            backendReady: false\r\n        };\r\n\r\n        this.selectTab = this.selectTab.bind(this);\r\n\r\n    }\r\n\r\n    selectTab(event) {\r\n        const { value } = event.target;\r\n\r\n        this.setState({\r\n            selectedTab: value\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        \r\n        fetch(url + \"/about/web\")\r\n        .then(res => res.text())\r\n        .then((data) => {\r\n            this.setState({\r\n                webData: data,\r\n                webReady: true\r\n            });\r\n        });\r\n\r\n        fetch(url + \"/about/backend\")\r\n        .then(res => res.text())\r\n        .then((data) => {\r\n            this.setState({\r\n                backendData: data,\r\n                backendReady: true\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid prediction\">\r\n                <div>\r\n                    <button \r\n                        value=\"web\" \r\n                        className={`subnavButton ${(this.state.selectedTab.includes(\"web\")) ? \"subnav-active\" : \" \"}`}\r\n                        onClick={this.selectTab}\r\n                    >Web Interface</button>\r\n\r\n                    <button \r\n                        value=\"backend\" \r\n                        className={`subnavButton ${(this.state.selectedTab.includes(\"backend\")) ? \"subnav-active\" : \" \"}`}\r\n                        onClick={this.selectTab}\r\n                    >Backend</button>\r\n                </div>\r\n                <hr className=\"split\"/>\r\n                <div className={`webui ${(this.state.selectedTab.includes(\"web\")) ? \" \" : \"hidden\"}`}>\r\n                    <h5 className=\"header\">MarkDown file from Project Calculo React App Document</h5>\r\n                    <div className=\"card\" style={{width: `${this.view.getWidthAsPX(75)}px`}}>\r\n                        <div className=\"card-body\" style={{textAlign: \"justify\"}}>\r\n                            {\r\n                                (this.state.webReady) ? (<MarkDown source={this.state.webData} />) : (<div><LoadingAnim /></div>)\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={`backend ${(this.state.selectedTab.includes(\"backend\")) ? \" \" : \"hidden\"}`}>\r\n                    <h5 className=\"header\">MarkDown file from Project Calculo Backend Server Document</h5>\r\n                    <div className=\"card\" style={{width: `${this.view.getWidthAsPX(75)}px`}}>\r\n                        <div className=\"card-body\" style={{textAlign: \"justify\"}}>\r\n                            {\r\n                                (this.state.backendReady) ? (<MarkDown source={this.state.backendData} />) : (<div><LoadingAnim /></div>)\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;","import React, { Component } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\n\r\nclass SimpleBar extends Component {\r\n\r\n    constructor(props) {\r\n        super();\r\n        this.header = props.properties.header;\r\n        this.width = props.properties.width;\r\n        this.height = props.properties.height;\r\n        this.data = {\r\n            labels: props.properties.labels,\r\n            datasets: [\r\n                {\r\n                    label: props.properties.label,\r\n                    backgroundColor: 'rgba(137,102,246,0.2)',\r\n                    borderColor: 'rgba(137,102,246,1)',\r\n                    borderWidth: 1,\r\n                    hoverBackgroundColor: 'rgba(123,226,239,0.4)',\r\n                    hoverBorderColor: 'rgba(123,226,239,1)',\r\n                    data: props.properties.mapData,\r\n                }\r\n            ]\r\n        };\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h5 style={{fontFamily: \"Comfortaa\", color: \"blueviolet\", margin: \"1%\"}}>\r\n                    {this.header}\r\n                </h5>\r\n                <Bar \r\n                    data={this.data}\r\n                    width={this.width}\r\n                    height={this.height}\r\n                    options={{\r\n                        maintainAspectRatio: true\r\n                    }}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default SimpleBar;","import React, { Component } from 'react';\r\nimport {HorizontalBar} from 'react-chartjs-2';\r\n\r\nclass HorizontalBarChart extends Component {\r\n\r\n    constructor(props) {\r\n        super();\r\n        this.header = props.properties.header;\r\n        this.width = props.properties.width;\r\n        this.height = props.properties.height;\r\n        this.data = {\r\n            labels: props.properties.labels,\r\n            datasets: [\r\n                {\r\n                    label: props.properties.label,\r\n                    backgroundColor: 'rgba(137,102,246,0.2)',\r\n                    borderColor: 'rgba(137,102,246,1)',\r\n                    borderWidth: 1,\r\n                    hoverBackgroundColor: 'rgba(123,226,239,0.4)',\r\n                    hoverBorderColor: 'rgba(123,226,239,1)',\r\n                    data: props.properties.mapData,\r\n                }\r\n            ]\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2 style={{fontFamily: \"Comfortaa\", color: \"blueviolet\", margin: \"1%\"}}>\r\n                    {this.header}\r\n                </h2>\r\n                <HorizontalBar \r\n                    data={this.data}\r\n                    width={this.width}\r\n                    height={this.height}\r\n                    options={{\r\n                        maintainAspectRatio: true\r\n                    }}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default HorizontalBarChart;","import React, { Component } from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\r\n\r\nclass LineGraph extends Component {\r\n\r\n    constructor(props) {\r\n        super();\r\n        this.width = props.properties.width;\r\n        this.height = props.properties.height;\r\n        this.data = props.properties.data;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <LineChart width={this.width} height={this.height} data={this.data}\r\n            margin={{top: 5, right: 30, left: 20, bottom: 5}}>\r\n                <XAxis dataKey=\"year\" label=\"Seasons\" />\r\n                <YAxis />\r\n                <CartesianGrid strokeDasharray=\"3 3\"/>\r\n                <Tooltip/>\r\n                <Legend />\r\n                <Line type=\"monotone\" dataKey=\"MI\" stroke=\"#8884d8\" activeDot={{r: 8}} animationDuration={5000} />\r\n                <Line type=\"monotone\" dataKey=\"KKR\" stroke=\"#82ca9d\" activeDot={{r: 8}} animationDuration={5000} />\r\n                <Line type=\"monotone\" dataKey=\"CSK\" stroke=\"#ebd843d6\" activeDot={{r: 8}} animationDuration={5000} />\r\n                <Line type=\"monotone\" dataKey=\"RCB\" stroke=\"#eb4343d6\" activeDot={{r: 8}} animationDuration={5000} />\r\n                <Line type=\"monotone\" dataKey=\"DC\" stroke=\"#cb43ebd6\" activeDot={{r: 8}} animationDuration={5000} />\r\n                <Line type=\"monotone\" dataKey=\"RR\" stroke=\"#eb43b6d6\" activeDot={{r: 8}} animationDuration={5000} />\r\n                <Line type=\"monotone\" dataKey=\"GL\" stroke=\"#c2690ad6\" activeDot={{r: 8}} animationDuration={5000} />\r\n                <Line type=\"monotone\" dataKey=\"KXIP\" stroke=\"#ed8181d6\" activeDot={{r: 8}} animationDuration={5000} />\r\n                <Line type=\"monotone\" dataKey=\"SRH\" stroke=\"#e7aa36d6\" activeDot={{r: 8}} animationDuration={5000} />\r\n                <Line type=\"monotone\" dataKey=\"RPS\" stroke=\"#bd36e7d6\" activeDot={{r: 8}} animationDuration={5000} />\r\n                <Line type=\"monotone\" dataKey=\"KTK\" stroke=\"#b2700ad6\" activeDot={{r: 8}} animationDuration={5000} />\r\n            </LineChart>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default LineGraph;","import React, { Component } from 'react';\r\nimport _ from 'lodash';\r\nimport './subnav.css';\r\nimport './dataset.css';\r\nimport ViewPortHandler from '../../viewPort';\r\n\r\nimport SimpleBar from '../simpleBar/simpleBar';\r\nimport HorizontalBar from '../simpleBar/horizontalBar';\r\nimport LineGraph from '../graph/comparableLineGraph';\r\nimport LoaderAnim from '../loader/loader';\r\n\r\nconst url = \"\";//\"http://localhost:8080\";\r\n\r\nclass Dataset extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.view = new ViewPortHandler();\r\n        this.width = this.view.getWidthAsPX(25);\r\n        this.state = {\r\n            selectedTab: \"analytics\",\r\n            analyticsData: [],\r\n            totalAnalyticsData: [],\r\n            overallPerformanceData: [],\r\n            teamData: [],\r\n            headerData: [],\r\n            venueData: [],\r\n            availableMatchDetails: '',\r\n            cityData: [],\r\n            cityDataReady: false,\r\n            availableMatchDetailsReady: false,\r\n            venueReady: false,\r\n            headerReady: false,\r\n            teamDataReady: false,\r\n            overallPerformanceReady: false,\r\n            totalAnalyticsReady: false,\r\n            analyticsReady: false\r\n        };\r\n\r\n        this.selectTab = this.selectTab.bind(this);\r\n        this.generateSimpleBars = this.generateSimpleBars.bind(this);\r\n        this.generateHorizontalBarGraph = this.generateHorizontalBarGraph.bind(this);\r\n        this.generateComparableLineGraph = this.generateComparableLineGraph.bind(this);\r\n    }\r\n\r\n    selectTab(event) {\r\n        const { value } = event.target;\r\n\r\n        this.setState({\r\n            selectedTab: value\r\n        });\r\n    }\r\n\r\n    generateSimpleBars() {\r\n\r\n        let simpleID = 1;\r\n\r\n        return this.state.analyticsData.map(record => (\r\n            \r\n            <div key={simpleID++} className=\"card\" style={{width: `${this.view.getWidthAsPX(28)}px`}}>\r\n                <SimpleBar \r\n                    properties={{\r\n                        header: \"Season \" + record[\"season\"],\r\n                        labels: record[\"teams\"],\r\n                        label: 'matches won',\r\n                        mapData: record[\"matchesWon\"],\r\n                        width: this.view.getWidthAsPX(100),\r\n                        height: this.view.getHeightAsPX(100)\r\n                    }}\r\n                />\r\n            </div>\r\n            \r\n        ));\r\n    }\r\n\r\n    generateHorizontalBarGraph() {\r\n        return (\r\n            <div className=\"card\" style={{width: `${this.view.getWidthAsPX(90)}px`}}>\r\n                <HorizontalBar \r\n                    properties={{\r\n                        header: \"Overall Analytics\",\r\n                        labels: this.state.totalAnalyticsData[\"teams\"],\r\n                        label: 'matches won',\r\n                        mapData: this.state.totalAnalyticsData[\"matchesWon\"],\r\n                        width: this.view.getWidth(55),\r\n                        height: this.view.getHeightAsPX(70)\r\n                    }}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    generateComparableLineGraph() {\r\n        return (\r\n            <div className=\"card\" style={{width: `${this.view.getWidthAsPX(90)}px`}}>\r\n                <h2 style={{fontFamily: \"Comfortaa\", color: \"blueviolet\", margin: \"1%\"}}>\r\n                    Overall Performance comparable Report\r\n                </h2>\r\n                <LineGraph \r\n                    properties={{\r\n                        data: this.state.overallPerformanceData,\r\n                        width: this.view.getWidthAsPX(85),\r\n                        height: this.view.getHeightAsPX(60)\r\n                    }}\r\n                />\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    generateMatchDetail() {\r\n        return (\r\n            <div className=\"card\" style={{width: `${this.cardWidth}px`}}>\r\n                <div className=\"card-body\">\r\n                    <h6 style={{fontFamily: \"Comfortaa\", color: \"blueviolet\", margin: \"1%\"}}>Total Match Details in DataSet</h6>\r\n                    <p style={{color: \"#eb43b6d6\"}}>{this.state.availableMatchDetails}</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    generateHeadersData() {\r\n        let count = 0;\r\n        return (\r\n            <div className=\"card\" style={{width: `${this.view.getWidthAsPX(15)}px`}}>\r\n                <div className=\"card-body\" style={{textAlign:\"left\", color: \"#eb43b6d6\"}}>\r\n                    <h6 style={{fontFamily: \"Comfortaa\", color: \"blueviolet\", margin: \"1%\"}}>Data Fields available in Dataset</h6>\r\n                    <ul>\r\n                        {   this.state.headerData.map(record => (\r\n                                <li key={count++}>{record}</li>\r\n                            ))\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    generateVenueData() {\r\n        let count = 0;\r\n        return (\r\n            <div className=\"card\" style={{width: `${this.cardWidth}px`}}>\r\n                <div className=\"card-body\" style={{textAlign:\"left\", color: \"#eb43b6d6\"}}>\r\n                    <h6 style={{fontFamily: \"Comfortaa\", color: \"blueviolet\", margin: \"1%\"}}>Venue data available in Dataset</h6>\r\n                    <ul>\r\n                        {\r\n                            this.state.venueData.map(record => (\r\n                                <li key={count++}>{record.toString().replace(\"\\\"\",\"\")}</li>\r\n                            ))\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    generateTeamNameData() {\r\n        let count = 0;\r\n        return (\r\n            <div className=\"card\" style={{width: `${this.cardWidth}px`}}>\r\n                <div className=\"card-body\" style={{textAlign:\"left\", color:\"#eb43b6d6\"}}>\r\n                    <h6 style={{fontFamily: \"Comfortaa\", color: \"blueviolet\", margin: \"1%\"}}>Team data available in Dataset</h6>\r\n                    <ul>\r\n                        {\r\n                            this.state.teamData.map(record => (\r\n                                <li key={count++}>{record}</li>\r\n                            ))\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    generateTeamTotalCount() {\r\n        return (\r\n            <div className=\"card\" style={{width: `${this.cardWidth}px`}}>\r\n                <div className=\"card-body\">\r\n                    <h6 style={{fontFamily: \"Comfortaa\", color: \"blueviolet\", margin: \"1%\"}}>Total No of Team Details in DataSet</h6>\r\n                    <p style={{color: \"#eb43b6d6\"}}>{this.state.teamData.length}</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    generateVenueTotalCount() {\r\n        return (\r\n            <div className=\"card\" style={{width: `${this.cardWidth}px`}}>\r\n                <div className=\"card-body\">\r\n                    <h6 style={{fontFamily: \"Comfortaa\", color: \"blueviolet\", margin: \"1%\"}}>Total No of Venue Details in DataSet</h6>\r\n                    <p style={{color: \"#eb43b6d6\"}}>{this.state.venueData.length}</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    generateCityData() {\r\n        let count = 0;\r\n        return (\r\n            <div className=\"card\" style={{width: `${this.cardWidth}px`}}>\r\n                <div className=\"card-body\" style={{ textAlign: 'left', color: '#eb43b6d6' }}>\r\n                    <h6 style={{fontFamily: \"Comfortaa\", color: \"blueviolet\", margin: \"1%\"}}>City data available in Dataset</h6>\r\n                    <ul>\r\n                        {\r\n                            this.state.cityData.map(record => (\r\n                                <li key={count++}>{record}</li>\r\n                            ))\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    generateCityTotalCount() {\r\n        return (\r\n            <div className=\"card\" style={{width: `${this.cardWidth}px`}}>\r\n                <div className=\"card-body\">\r\n                    <h6 style={{fontFamily: \"Comfortaa\", color: \"blueviolet\", margin: \"1%\"}}>Total No of City Details in DataSet </h6>\r\n                    <p style={{color: \"#eb43b6d6\"}}>{this.state.cityData.length}</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getDataSetAsCSV() {\r\n        fetch(url + '/dataset/csv')\r\n        .then(res => res.blob())\r\n        .then((blob) => {\r\n            const url = window.URL.createObjectURL(new Blob([blob]));\r\n            const link = document.createElement('a');\r\n            link.href = url;\r\n            link.setAttribute('download', `svb_dataset.csv`);\r\n            document.body.appendChild(link);\r\n            link.click();\r\n            link.parentNode.removeChild(link);\r\n        }).catch((error) => {\r\n            console.log(error);\r\n            \r\n        });\r\n    }\r\n\r\n    getDataSetAsJSON() {\r\n        fetch(url + '/dataset/json')\r\n        .then(res => res.blob())\r\n        .then((blob) => {\r\n            const url = window.URL.createObjectURL(new Blob([blob]));\r\n            const link = document.createElement('a');\r\n            link.href = url;\r\n            link.setAttribute('download', `svb_clean_dataset.json`);\r\n            document.body.appendChild(link);\r\n            link.click();\r\n            link.parentNode.removeChild(link);\r\n        }).catch((error) => {\r\n            console.log(error);\r\n            \r\n        });\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        let analyticDatas = [];\r\n        let OverallPerformance = []\r\n\r\n        fetch(url + '/dataset/analyse')\r\n        .then(res => res.json())\r\n        .then((data) => {\r\n            \r\n            _.forOwn(data, (value, key) => {\r\n            \r\n                // For Analytrics\r\n                let temp = {};\r\n                let teamName = [];\r\n                let matchesWon = [];\r\n\r\n                _.forOwn(value, (wins, team) => {\r\n                    teamName.push(team);\r\n                    matchesWon.push(wins);\r\n                }, {});\r\n\r\n                // For Analytics\r\n                temp[\"season\"] = key;\r\n                temp[\"teams\"] = teamName;\r\n                temp[\"matchesWon\"] = matchesWon;\r\n\r\n                // for Analytics\r\n                analyticDatas.push(temp);\r\n            \r\n            }, {});\r\n\r\n            this.setState({\r\n                analyticsData: analyticDatas,\r\n                analyticsReady: true\r\n            })\r\n            \r\n        });\r\n\r\n        fetch(url + '/dataset/analyse')\r\n        .then(res => res.json())\r\n        .then((data) => {\r\n\r\n             _.forOwn(data, (value, key) => {\r\n                 // overall performance\r\n                let tempPerformance = {};\r\n\r\n                _.forOwn(value, (wins, team) => {\r\n                    // for Overall performance\r\n                    tempPerformance[team] = wins;\r\n                }, {});\r\n\r\n                // for Overall Performance\r\n                tempPerformance[\"season\"] = key;\r\n                //for Overall Performance\r\n                OverallPerformance.push(tempPerformance);\r\n\r\n             }, {});\r\n\r\n             this.setState({\r\n                overallPerformanceData: OverallPerformance,\r\n                overallPerformanceReady: true\r\n            });\r\n\r\n        });\r\n\r\n        console.log(this.state.overallPerformanceData);\r\n        \r\n        \r\n        fetch(url + '/dataset/totalWins')\r\n        .then(res => res.json())\r\n        .then((data) => {\r\n\r\n            let teamName = [];\r\n            let matchesWon = [];\r\n\r\n            _.forOwn(data, (wins, team) => {\r\n                teamName.push(team);\r\n                matchesWon.push(wins);\r\n            }, {});\r\n\r\n            this.setState({\r\n                totalAnalyticsData: {\r\n                    \"teams\": teamName,\r\n                    \"matchesWon\": matchesWon\r\n                },\r\n                totalAnalyticsReady: true\r\n            });\r\n\r\n        });\r\n\r\n        fetch( url + '/dataset/allTeams')\r\n        .then(res => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                teamData: data,\r\n                teamDataReady: true\r\n            });\r\n        });\r\n\r\n        fetch(url + '/dataset/headers')\r\n        .then(res => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                headerData: data,\r\n                headerReady: true\r\n            });\r\n        });\r\n\r\n        fetch(url + '/dataset/matchDetailsCount')\r\n        .then(res => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                availableMatchDetails: data,\r\n                availableMatchDetailsReady: true\r\n            });\r\n        });\r\n\r\n        fetch(url + '/dataset/venue')\r\n        .then(res => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                venueData: data,\r\n                venueReady: true\r\n            });\r\n        });\r\n\r\n        fetch(url + '/dataset/city')\r\n        .then(res => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                cityData: data,\r\n                cityDataReady: true\r\n            })\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid dataset\">\r\n                <div>\r\n\r\n                    <button \r\n                        value=\"analytics\" \r\n                        className={`subnavButton ${(this.state.selectedTab.includes(\"analytics\")) ? \"subnav-active\" : \" \"}`}\r\n                        onClick={this.selectTab}\r\n                    >Dataset Analytics</button>\r\n\r\n                    <button \r\n                        value=\"stats\" \r\n                        className={`subnavButton ${(this.state.selectedTab.includes(\"stats\")) ? \"subnav-active\" : \" \"}`}\r\n                        onClick={this.selectTab}\r\n                    >Stats</button>\r\n\r\n                    <button \r\n                        value=\"getit\" \r\n                        className={`subnavButton ${(this.state.selectedTab.includes(\"getit\")) ? \"subnav-active\" : \" \"}`}\r\n                        onClick={this.selectTab}\r\n                    >Get It</button>\r\n\r\n                </div>\r\n                <hr className=\"split\"/>\r\n                <div className={`analytics ${(this.state.selectedTab.includes(\"analytics\")) ? \" \" : \"hidden\"}`}>\r\n                    <div className=\"overallPerformance\">\r\n                        {\r\n                            (this.state.overallPerformanceReady) ? this.generateComparableLineGraph() : (<div><LoaderAnim /> <h4>Loading Overall Performance Report</h4></div>)\r\n                        }\r\n                    </div>\r\n                    <div className=\"overall\">\r\n                        {\r\n                            (this.state.totalAnalyticsReady) ? this.generateHorizontalBarGraph() : (<div><LoaderAnim /> <h4>Loading Overall Analytics</h4></div>)\r\n                        }\r\n                    </div>\r\n                    <br/>\r\n                    <div className=\"seasonwise\">\r\n                        <h3 style={{fontFamily: \"Comfortaa\", color: \"blueviolet\", marginRight: \"3%\"}}>Seasonal Analysis</h3>\r\n                        {\r\n                            (this.state.analyticsReady) ? this.generateSimpleBars() : (<div><LoaderAnim /> <h4>Loading Seasonal Analytics</h4></div>)\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className={`stats ${(this.state.selectedTab.includes(\"stats\")) ? \" \" : \"hidden\"}`}>\r\n                    <div>\r\n                        {\r\n                            (this.state.availableMatchDetailsReady) ? this.generateMatchDetail() : (<div><LoaderAnim /> <h4>Loading statistical data</h4></div>)\r\n                        }   \r\n                        {\r\n                            (this.state.teamDataReady) ? this.generateTeamTotalCount() : (<div><LoaderAnim /> <h4>Loading statistical data</h4></div>)\r\n                        }\r\n                        {\r\n                            (this.state.venueReady) ? this.generateVenueTotalCount() : (<div><LoaderAnim /> <h4>Loading statistical data</h4></div>)\r\n                        }\r\n                        {\r\n                            (this.state.cityDataReady) ? this.generateCityTotalCount() : (<div><LoaderAnim /> <h4>Loading statistical data</h4></div>)\r\n                        }\r\n                    </div>\r\n                    <div>\r\n                        {\r\n                            (this.state.venueReady) ? this.generateVenueData() : (<div><LoaderAnim /> <h4>Loading statistical data</h4></div>)\r\n                        }\r\n                    </div>\r\n                    <div>\r\n                        {\r\n                            (this.state.teamDataReady) ? this.generateTeamNameData() : (<div><LoaderAnim /> <h4>Loading statistical data</h4></div>)\r\n                        }\r\n                    </div>\r\n                    <div>\r\n                        {\r\n                            (this.state.cityDataReady) ? this.generateCityData() : (<div><LoaderAnim /> <h4>Loading statistical data</h4></div>) \r\n                        }\r\n                    </div>\r\n                    <div>\r\n                        {\r\n                            (this.state.headerReady) ? this.generateHeadersData() : (<div><LoaderAnim /> <h4>Loading statistical data</h4></div>)\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className={`getit ${(this.state.selectedTab.includes(\"getit\")) ? \" \" : \"hidden\"}`}>\r\n                    <h3 style={{ marginTop: \"20px\", marginBottom: \"20px\"}}>Download the Data Set and Play around</h3>\r\n                    <div className=\"card\" style={{width:`${this.view.getWidthAsPX(45)}px`}}>\r\n                        <div className=\"card-body\">\r\n                            <h6 style={{fontFamily: \"Comfortaa\", color: \"blueviolet\", margin: \"4%\", marginBottom: \"6%\"}}>CSV (Comma Separated Values)</h6>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-3\">\r\n                                <img width={this.view.getWidthAsPX(8)} src=\"https://upload.wikimedia.org/wikipedia/commons/archive/3/3d/20190128150702%21Logo_CSV.svg\" alt=\"CSV logo\"/>\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    <p style={{textAlign: \"justify\"}}>\r\n                                        The CSV based dataset is raw and untouched data from IPL match details collected over the years.\r\n                                    </p>\r\n                                    <button className=\"download-btn\" id=\"downCSV\" onClick={this.getDataSetAsCSV}>Download Dataset as CSV</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card\" style={{width:`${this.view.getWidthAsPX(45)}px`}}>\r\n                        <div className=\"card-body\">\r\n                            <h6 style={{fontFamily: \"Comfortaa\", color: \"blueviolet\", margin: \"4%\", marginBottom: \"6%\"}}>JSON (Javascript Object Notation)</h6>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-3\">\r\n                                    <img width={this.view.getWidthAsPX(8)} src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/c/c9/JSON_vector_logo.svg/1024px-JSON_vector_logo.svg.png\" alt=\"JSON logo\"/>\r\n                                </div>\r\n                                <div className=\"col\">\r\n                                    <p style={{textAlign: \"justify\"}}>\r\n                                        The JSON format of dataset is cleaned and normalised using our Active Data Cleansing Engine present Calculo.\r\n                                    </p>\r\n                                    <button className=\"download-btn\" id=\"downJSON\" onClick={this.getDataSetAsJSON}>Download Clean Dataset as JSON</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dataset;","import React, { Component } from 'react';\r\nimport './subnav.css';\r\nimport './models.css';\r\n\r\nimport ViewPortHandler from '../../viewPort';\r\nimport LoaderAnim from '../loader/loader';\r\n\r\nconst url = \"\"; //\"http://localhost:8080\";\r\n\r\nclass Models extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.view = new ViewPortHandler();\r\n        this.state = {\r\n            selectedTab: \"Efficiency\",\r\n            models: null,\r\n            modelsReady: false,\r\n            modelEfficiency: null,\r\n            modelEfficiencyReady: false,\r\n            modelName: \"\",\r\n            modelIteration: \" \",\r\n            modelLearningRate: \" \",\r\n            trainingStarted: false,\r\n            validData: true,\r\n            modelTrained: false\r\n        };\r\n\r\n        this.selectTab = this.selectTab.bind(this);\r\n        this.generateModelsList = this.generateModelsList.bind(this);\r\n        this.generateModelEfficiency = this.generateModelEfficiency.bind(this);\r\n        this.handleInput = this.handleInput.bind(this);\r\n        this.startTraining = this.startTraining.bind(this);\r\n        this.checkIfModelReady = this.checkIfModelReady.bind(this);\r\n        this.downloadModel = this.downloadModel.bind(this);\r\n        this.downloadOurModel = this.downloadOurModel.bind(this);\r\n\r\n    }\r\n\r\n    selectTab(event) {\r\n        const { value } = event.target;\r\n\r\n        this.setState({\r\n            selectedTab: value\r\n        });\r\n    }\r\n\r\n    generateModelsList() {\r\n\r\n        return (\r\n            <div className=\"card\" style={{width: `${this.view.getWidthAsPX(45)}px`}}>\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"header\">Available Models</h5>\r\n                    {\r\n                        (this.state.models.map(record => {\r\n                            return (\r\n                                <div className=\"uni\">\r\n                                    <hr/>\r\n                                    <h6 className=\"header\" style={{fontWeight: \"bold\"}}>{record}</h6>\r\n                                    <hr/>\r\n                                    {\r\n                                        (record === 'svb100') ? (<p key={1} className=\"disclaimer\">LSTM Time-Step Recurrent Neural Net is trained with medium learning rate and with 100 iterations</p>):(<div></div>)\r\n                                    }\r\n                                    {\r\n                                        (record === 'svb10000') ? (<p key={2} className=\"disclaimer\">LSTM Time-Step Recurrent Neural Net is trained with low learning rate and with 10000 iterations</p>):(<div></div>)\r\n                                    }\r\n                                    {\r\n                                        (record === 'svb100cv') ? (<p key={3} className=\"disclaimer\">This Convolutional Neural Net is trained with medium learning rate and with 100 iterations</p>):(<div></div>)\r\n                                    }\r\n                                </div>\r\n                            );\r\n                        }))\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n    generateModelEfficiency() {\r\n        return (\r\n            <div className=\"card\" style={{width: `${this.view.getWidthAsPX(45)}px`}}>\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"header\">Alpha Brain Efficiency</h5>\r\n                    <hr/>\r\n                    <button className=\"effStats\">Accuracy: {this.state.modelEfficiency[\"accuracy\"].toFixed(2)}</button>\r\n                    <button className=\"effStats\">Error Rate: {this.state.modelEfficiency[\"errorRate\"].toFixed(2)}</button>\r\n                    <hr/>\r\n                    <h5 className=\"header\">Test Stats</h5>\r\n                    <hr/>\r\n                    <button className=\"effStats\">Error in Prediction: {this.state.modelEfficiency[\"errorCount\"]}</button>\r\n                    <button className=\"effStats\">Total Test Data: {this.state.modelEfficiency[\"totalTestData\"]}</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    startTraining() {\r\n\r\n        fetch(url + \"/models/trainCustom\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                modelName: this.state.modelName,\r\n                modelIterations: this.state.modelIteration,\r\n                modelLearningRate: this.state.modelLearningRate\r\n            })\r\n        }).then(res => res.json())\r\n        .then((data) => {\r\n            if (data[\"status\"] === 'success') {\r\n                this.setState({\r\n                    trainingStarted: true\r\n                });\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    checkIfModelReady() {\r\n        fetch(url + \"/models/checkIfTrained\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                modelName: this.state.modelName\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then((data) => {\r\n            if (data[\"trained\"] === true) {\r\n                console.log(data);\r\n                \r\n                this.setState({\r\n                    modelTrained: true\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    downloadModel() {\r\n        fetch(url + \"/models/downloadModel\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                modelName: this.state.modelName\r\n            })\r\n        })\r\n        .then(res => res.blob())\r\n        .then((blob) => {\r\n            const url = window.URL.createObjectURL(new Blob([blob]));\r\n            const link = document.createElement('a');\r\n            link.href = url;\r\n            link.setAttribute('download', `${this.state.modelName}.json`);\r\n            document.body.appendChild(link);\r\n            link.click();\r\n            link.parentNode.removeChild(link);\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    handleInput(event) {\r\n        const { value, name } = event.target;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n\r\n    }\r\n\r\n    downloadOurModel(event) {\r\n\r\n        const { name } = event.target;\r\n\r\n        fetch(url + \"/models/downloadOurModel\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                modelName: name\r\n            })\r\n        })\r\n        .then(res => res.blob())\r\n        .then((blob) => {\r\n            const url = window.URL.createObjectURL(new Blob([blob]));\r\n            const link = document.createElement('a');\r\n            link.href = url;\r\n            link.setAttribute('download', `${name}`);\r\n            document.body.appendChild(link);\r\n            link.click();\r\n            link.parentNode.removeChild(link);\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n\r\n    } \r\n\r\n    componentDidMount() {\r\n\r\n        fetch(url + \"/models/listAll\")\r\n        .then(res => res.json())\r\n        .then((data) => {\r\n            let tempList = [];\r\n\r\n            data.forEach(file => {\r\n                tempList.push(file.replace('.json', \"\"));\r\n            });\r\n\r\n            this.setState({\r\n                models: tempList,\r\n                modelsReady: true\r\n            });\r\n\r\n        });\r\n\r\n        fetch(url + \"/models/efficiency\")\r\n        .then(res => res.json())\r\n        .then((data) => {\r\n            let efficiency = {\r\n\r\n                \"accuracy\": (100.00 - data[\"ErrorRate\"]),\r\n                \"errorRate\": data[\"ErrorRate\"],\r\n                \"errorCount\": data[\"ErrorCount\"],\r\n                \"totalTestData\": data[\"TotalData\"]\r\n\r\n            }\r\n\r\n            this.setState({\r\n                modelEfficiency: efficiency,\r\n                modelEfficiencyReady: true\r\n            });\r\n\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid prediction\">\r\n                <div>\r\n                    <button \r\n                        value=\"Efficiency\" \r\n                        className={`subnavButton ${(this.state.selectedTab.includes(\"Efficiency\")) ? \"subnav-active\" : \" \"}`}\r\n                        onClick={this.selectTab}\r\n                    >Model Efficiency</button>\r\n\r\n                    <button \r\n                        value=\"Custom\" \r\n                        className={`subnavButton ${(this.state.selectedTab.includes(\"Custom\")) ? \"subnav-active\" : \" \"}`}\r\n                        onClick={this.selectTab}\r\n                    >Train Own Model</button>\r\n\r\n                    <button \r\n                        value=\"getit\" \r\n                        className={`subnavButton ${(this.state.selectedTab.includes(\"getit\")) ? \"subnav-active\" : \" \"}`}\r\n                        onClick={this.selectTab}\r\n                    >Get it</button>\r\n                </div>\r\n                <hr className=\"split\"/>\r\n                <div className={`modelEfficiency ${(this.state.selectedTab.includes(\"Efficiency\")) ? \" \" : \"hidden\"}`}>\r\n                    <h4 className=\"header\" style={{marginTop:`${this.view.getWidthAsPX(2)}px`, marginBottom:`${this.view.getWidthAsPX(2)}px`}}>Alpha Brain Engine Info</h4>\r\n                    {\r\n                        (this.state.modelsReady) ? this.generateModelsList() : (<div><LoaderAnim /><h4>Loading Models From Calculo Server</h4></div>)\r\n                    }\r\n                    {\r\n                        (this.state.modelEfficiencyReady) ? this.generateModelEfficiency() : (<div><LoaderAnim /><h4>Loading Models Efficiency From Calculo Server</h4></div>)\r\n                    }\r\n                </div>\r\n                <div className={`customModel ${(this.state.selectedTab.includes(\"Custom\")) ? \" \" : \"hidden\"}`}>\r\n                    <h4 className=\"header\" style={{marginTop:`${this.view.getWidthAsPX(2)}px`, marginBottom:`${this.view.getWidthAsPX(2)}px`}}>Customize and Download it for Your Own Use</h4>\r\n                    \r\n                    <div className=\"card\" style={{width: `${this.view.getWidthAsPX(45)}px`}}>\r\n                        <div className=\"card-body\">\r\n                            <h6 className=\"header\">Customize and Train</h6>\r\n                            <hr/>\r\n                            <input className=\"custTrain\" name=\"modelName\" placeholder=\"Enter your model name\" type=\"text\" value={this.state.modelName} onChange={this.handleInput} />\r\n                            <input className=\"custTrain\" name=\"modelIteration\" type=\"number\" placeholder=\"Enter no of Iteration\" value={this.state.modelIteration} onChange={this.handleInput} />\r\n                            <input className=\"custTrain\" name=\"modelLearningRate\" type=\"number\" placeholder=\"Enter learning rate from 0.3 to 1\" value={this.state.modelLearningRate} onChange={this.handleInput} />\r\n                            <hr/>\r\n                            {\r\n                                (this.state.trainingStarted) ? (<div><p className=\"status\">Training process started, please wait</p><hr/></div>) : (<div></div>)\r\n                            }\r\n                            <button className=\"download-btn\" onClick={this.startTraining}>Initiate Model Training</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"card\" style={{width: `${this.view.getWidthAsPX(45)}px`}}>\r\n                        <div className=\"card-body\">\r\n                            <h6 className=\"header\">Customize and Train</h6>\r\n                            <hr/>\r\n                            <input className=\"custTrain\" name=\"modelName\" placeholder=\"Enter your model name\" type=\"text\" value={this.state.modelName} onChange={this.handleInput} />\r\n                            <hr/>\r\n                            {\r\n                                (this.state.modelTrained) ? (<button className=\"download-btn\" onClick={this.downloadModel}>Download Model</button>) : (<div></div>)\r\n                            }\r\n                            {\r\n                                (!this.state.modelTrained) ? (<div><p className=\"status\">Training process started, please wait</p><hr/></div>) : (<div></div>)\r\n                            }\r\n                            <button className=\"download-btn\" onClick={this.checkIfModelReady}>Check If Model Ready</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className={`custom ${(this.state.selectedTab.includes(\"getit\")) ? \" \" : \"hidden\"}`}>\r\n                    <h4 className=\"header\" style={{marginTop:`${this.view.getWidthAsPX(2)}px`, marginBottom:`${this.view.getWidthAsPX(2)}px`}}>Get Out Model</h4>\r\n                    <div className=\"card center\" style={{width: `${this.view.getWidthAsPX(75)}px`}}>\r\n                        <h5 className=\"header\" style={{margin: \"2%\"}}>Click to download model</h5>\r\n                        <button name=\"svb100.json\" className=\"effStats\" onClick={this.downloadOurModel}>SVB 100 LSTM Neural Net</button>\r\n                        <button name=\"svb10000.json\" className=\"effStats\" onClick={this.downloadOurModel}>SVB 10000 LSTM Neural Net</button>\r\n                        <button name=\"svb100.json\" className=\"effStats\" onClick={this.downloadOurModel}>SVB 100 Convolutional Neural Net</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Models;","import React, { Component } from 'react';\r\nimport _ from 'lodash';\r\nimport './subnav.css';\r\nimport './prediction.css';\r\n\r\nimport ViewPortHandler from '../../viewPort';\r\nimport LoaderAnim from '../loader/loader';\r\nimport HorizonalBar from '../simpleBar/horizontalBar';\r\nimport { Switch } from 'antd';\r\nimport 'antd/dist/antd.css';\r\n\r\nconst url = \"\"; //\"http://localhost:8080\";\r\n\r\nclass Predictions extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.view = new ViewPortHandler();\r\n        this.state = {\r\n            selectedTab: \"TeamsPrediction\",\r\n            team: [],\r\n            city: [],\r\n            team1Selected: \"\",\r\n            team2Selected: \"\",\r\n            teamReady: false,\r\n            SchemaReady: false,\r\n            tossWinner: \"\",\r\n            tossDecision: \"\",\r\n            winner: \"\",\r\n            Season: 2020,\r\n            SeasonalData: {},\r\n            Season2020: false,\r\n            Season2021: false,\r\n            Season2022: false,\r\n            SeasonalDataReady: false,\r\n            matchMakingData: [],\r\n            finals: {},\r\n            predictedOneVsOne: false,\r\n            predicted2020Finals: false,\r\n            predicted2021Finals: false,\r\n            predicted2022Finals: false,\r\n            reportsAvailable: false,\r\n            reportsData: null\r\n        };\r\n        this.selectTab = this.selectTab.bind(this);\r\n        this.generateTeamOne = this.generateTeamOne.bind(this);\r\n        this.generateTeamTwo = this.generateTeamTwo.bind(this);\r\n        this.handleSelection = this.handleSelection.bind(this);\r\n        this.handleTossWinner = this.handleTossWinner.bind(this);\r\n        this.handleTossDecision = this.handleTossDecision.bind(this);\r\n        this.oneOnOnePrediction = this.oneOnOnePrediction.bind(this);\r\n        this.generateMatchMakingSchema = this.generateMatchMakingSchema.bind(this);\r\n        this.generateReport = this.generateReport.bind(this);\r\n        this.SeasonalPrediction = this.SeasonalPrediction.bind(this);\r\n        this.predictFinals = this.predictFinals.bind(this);\r\n        this.predictOneVsOneFromServer = this.predictOneVsOneFromServer.bind(this);\r\n        this.getReportsData = this.getReportsData.bind(this);\r\n    }\r\n\r\n    selectTab(event) {\r\n        const { value } = event.target;\r\n\r\n        this.setState({\r\n            selectedTab: value\r\n        });\r\n    }\r\n\r\n    handleSelection(event) {\r\n        const { name, value } = event.target;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    handleTossWinner(checked ,event) {\r\n        \r\n        if (checked) {\r\n            this.setState({\r\n                tossWinner: `${this.state.team1Selected}`\r\n            });\r\n        } else {\r\n            this.setState({\r\n                tossWinner: `${this.state.team2Selected}`\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    handleTossDecision(checked, event) {\r\n        \r\n        if (checked) {\r\n            this.setState({\r\n                tossDecision: \"Batting\"\r\n            });\r\n        } else {\r\n            this.setState({\r\n                tossDecision: \"Chasing\"\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    predictOneVsOneFromServer(team1, team2, callback) {\r\n        fetch(url + \"/predict/OneVsOne\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                \"team1\": team1,\r\n                \"team2\": team2,\r\n                \"tossWinner\": team1,\r\n                \"tossDecision\": `Batting`\r\n            })\r\n        })\r\n        .then(res => res.json())\r\n        .then((data) => {\r\n            callback(data[\"winner\"]);\r\n        });\r\n    }\r\n\r\n    predictFinals(event) {\r\n\r\n        const { value } = event.target;\r\n        let Season = value;\r\n\r\n        console.log(\"Predict Finals \", Season);\r\n        \r\n\r\n        let data = this.state.SeasonalData;\r\n\r\n        this.predictOneVsOneFromServer(data[0], data[1], (winner) => {\r\n            this.predictOneVsOneFromServer(data[2], data[3], (winner2) => {\r\n                let losser;\r\n\r\n                if (winner === data[0]) {\r\n                    losser = data[1];\r\n                } else {\r\n                    losser = data[0];\r\n                }\r\n\r\n                this.predictOneVsOneFromServer(winner2, losser, (winner3) => {\r\n                    this.predictOneVsOneFromServer(winner, winner3, (champ) => {\r\n\r\n                        this.state.finals[Season] = {\r\n                            \"t1\": winner,\r\n                            \"t2\": winner3,\r\n                            \"champ\": champ\r\n                        };\r\n\r\n                        this.setState({\r\n                            [`predicted${Season}Finals`]: true,\r\n                            [`Season${Season}`]: false\r\n                        })\r\n                    })\r\n                })\r\n\r\n            })\r\n        })\r\n    }\r\n\r\n    SeasonalPrediction(Season) {\r\n        console.log(\"SeasonalPrediction\");\r\n\r\n        let SemiFinalists = this.state.SeasonalData;\r\n        \r\n        return (\r\n            <div className=\"card\" style={{width:`${this.view.getWidthAsPX(90)}px`}}>\r\n                <div className=\"card-header\">\r\n                    <h6 className=\"header\">Season {Season} Prediction</h6>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <h6 className=\"header\"> Play-Offs </h6>\r\n                    <hr/>\r\n                    <button className=\"finalists\">{SemiFinalists[0]}</button><button className=\"finalists\">{SemiFinalists[1]}</button><button className=\"finalists\">{SemiFinalists[2]}</button><button className=\"finalists\">{SemiFinalists[3]}</button>\r\n                    <hr/>\r\n                    {\r\n                        (this.state[`predicted${Season}Finals`]) ? (\r\n                            <div>\r\n                                <h6 className=\"header\"> Finalists </h6>\r\n                                <hr/>\r\n                                <button className=\"finalists\">{this.state.finals[\"\" + Season][\"t1\"]}</button><button className=\"finalists\">{this.state.finals[\"\" + Season][\"t2\"]}</button>\r\n                                <hr/>\r\n                                <h6 className=\"header\"> Championship </h6>\r\n                                <hr/>\r\n                                <button className=\"finalists\">{this.state.finals[\"\" + Season][\"champ\"]}</button>\r\n                                <hr/>\r\n                            </div>\r\n                        ) : (<div></div>)\r\n                    }\r\n                    <button className=\"download-btn\" value={\"\" + Season} onClick={this.predictFinals}>Predict Season Winner</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    oneOnOnePrediction() {\r\n        fetch(url + '/predict/OneVsOne', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                \"team1\": `${this.state.team1Selected}`,\r\n                \"team2\": `${this.state.team2Selected}`,\r\n                \"tossWinner\": `${this.state.tossWinner}`,\r\n                \"tossDecision\": `${this.state.tossDecision}`\r\n            })\r\n        }).then(res => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                winner: data[\"winner\"],\r\n                predictedOneVsOne: true\r\n            })\r\n        })\r\n    }\r\n\r\n    generateTeamOne() {\r\n        let count = 1;\r\n        return this.state.team.map(record => (\r\n            <option key={count++} value={`${record}`}>{record}</option>\r\n        ));\r\n    }\r\n\r\n    generateTeamTwo() {\r\n        let count = 1;\r\n        return this.state.team.map(record => {\r\n            if (record !== this.state.team1Selected) {\r\n                return (<option key={count++} value={`${record}`}>{record}</option>)\r\n            }\r\n            return \"\";\r\n        })\r\n    }\r\n\r\n    generateReport() {\r\n        return (\r\n            <div className=\"card\" style={{width: `${this.view.getWidthAsPX(90)}px`}}>\r\n                <HorizonalBar \r\n                    properties={{\r\n                        header: \"Overall Analytics\",\r\n                        labels: this.state.reportsData[\"team\"],\r\n                        label: 'matches won',\r\n                        mapData: this.state.reportsData[\"wins\"],\r\n                        width: this.view.getWidth(55),\r\n                        height: this.view.getHeightAsPX(70)\r\n                    }}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getReportsData() {\r\n        fetch(url + \"/predict/SeasonalWins\")\r\n        .then(res => res.json())\r\n        .then((data) => {\r\n\r\n            let temp = {};\r\n            let teams = [];\r\n            let wins = [];\r\n\r\n            _.forOwn(data, (value, key) => {\r\n                if (key !== 'Draw') {\r\n                    teams.push(key);\r\n                    wins.push(value);\r\n                }\r\n            }, {});\r\n\r\n            temp = {\r\n                \"team\": teams,\r\n                \"wins\": wins\r\n            };\r\n\r\n            this.setState({\r\n                reportsData: temp,\r\n                reportsAvailable: true\r\n            });\r\n\r\n        });\r\n    }\r\n\r\n    generateMatchMakingSchema() {\r\n        console.log(\"Schema\");\r\n\r\n        let tempMatchMakingData = [];\r\n\r\n        let teamsPresent = [];\r\n        \r\n        this.state.team.forEach(record => {\r\n            if (record !== \"KTK\" & record !== \"GL\" & record !== \"RPS\") {\r\n                teamsPresent.push(record);\r\n            }\r\n        })\r\n\r\n        teamsPresent.forEach(record => {\r\n            \r\n            teamsPresent.forEach(record1 => {\r\n                if (record1 !== record) {\r\n                    tempMatchMakingData.push({\r\n                        \"team1\": record,\r\n                        \"team2\": record1,\r\n                        \"tossWinner\": record,\r\n                        \"tossDecision\": \"Batting\"\r\n                    });\r\n                }\r\n            });\r\n\r\n        });\r\n\r\n        console.log(tempMatchMakingData);\r\n        \r\n        this.setState({\r\n            matchMakingData: tempMatchMakingData,\r\n            SchemaReady: true\r\n        });\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        fetch(url + '/dataset/allTeams')\r\n        .then(res => res.json())\r\n        .then((data) => {\r\n            this.setState({\r\n                team: data,\r\n                teamReady: true\r\n            });\r\n            this.generateMatchMakingSchema();\r\n\r\n            fetch(url + \"/predict/Seasonal\", {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    matchData: this.state.matchMakingData\r\n                })\r\n            }).then(res => res.json())\r\n            .then((data) => {\r\n    \r\n                let SeasonalData = this.state.SeasonalData;\r\n                SeasonalData = data.predictions.SemiFinalists;\r\n    \r\n                this.setState({\r\n                    SeasonalData: SeasonalData,\r\n                    SeasonalDataReady: true\r\n                });\r\n                \r\n            });\r\n\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid prediction\">\r\n                <div>\r\n                    <button \r\n                        value=\"TeamsPrediction\" \r\n                        className={`subnavButton ${(this.state.selectedTab.includes(\"TeamsPrediction\")) ? \"subnav-active\" : \" \"}`}\r\n                        onClick={this.selectTab}\r\n                    >Team Vs Team</button>\r\n\r\n                    <button \r\n                        value=\"NextPredict\" \r\n                        className={`subnavButton ${(this.state.selectedTab.includes(\"NextPredict\")) ? \"subnav-active\" : \" \"}`}\r\n                        onClick={this.selectTab}\r\n                    >Next Season</button>\r\n\r\n                    <button \r\n                        value=\"custom\" \r\n                        className={`subnavButton ${(this.state.selectedTab.includes(\"custom\")) ? \"subnav-active\" : \" \"}`}\r\n                        onClick={this.selectTab}\r\n                    >Predicted Analytics</button>\r\n                </div>\r\n                <hr className=\"split\"/>\r\n                <div className={`teamsPrediction ${(this.state.selectedTab.includes(\"TeamsPrediction\")) ? \" \" : \"hidden\"}`}>\r\n                    <h4 className=\"header\" style={{marginTop:`${this.view.getWidthAsPX(2)}px`, marginBottom:`${this.view.getWidthAsPX(2)}px`}}> Custom One vs One Match Prediction System</h4>\r\n                    <div>\r\n                        <div className=\"card\" style={{width:`${this.view.getWidthAsPX(45)}px`}}>\r\n                            <div className=\"card-body\">\r\n                                <h5 style={{fontFamily: \"Comfortaa\", color: \"blueviolet\", margin: \"1%\", marginBottom: \"3%\"}}>Select Team 1</h5>\r\n                                <select name=\"team1Selected\" className=\"teamBox\" id=\"team1\" value={this.state.team1Selected} onChange={this.handleSelection}>\r\n                                    <option value=\"\">Select a team</option>\r\n                                    {\r\n                                        (this.state.teamReady) ? this.generateTeamOne() : (<option value=\"wait\">wait</option>)\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card\" style={{width: `${this.view.getWidthAsPX(45)}px`}}>\r\n                            <div className=\"card-body\">\r\n                                <h5 style={{fontFamily: \"Comfortaa\", color: \"blueviolet\", margin: \"1%\", marginBottom: \"3%\"}}>Select Team 2</h5>\r\n                                <select name=\"team2Selected\" className=\"teamBox\" id=\"team2\" value={this.state.team2Selected} onChange={this.handleSelection}>\r\n                                    <option value=\"\">Select a team</option>\r\n                                    {\r\n                                        (this.state.team1Selected !== \"\") ? this.generateTeamTwo() : (<option value=\"wait\">wait</option>)\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className={`matchDetails ${(this.state.team1Selected !== \"\" & this.state.team2Selected !== \"\") ? \" \" : \"hidden\"}`}>\r\n                            <div className=\"card\" style={{width: `${this.view.getWidthAsPX(45)}px`}}>\r\n                                <div className=\"card-body\">\r\n                                    <h5 style={{fontFamily: \"Comfortaa\", color: \"blueviolet\", margin: \"1%\", marginBottom: \"3%\"}}>Match Biases</h5>\r\n                                    <h5>Toss Won By</h5>   <Switch checkedChildren={this.state.team1Selected} unCheckedChildren={this.state.team2Selected} onChange={this.handleTossWinner}/>\r\n                                    <br/>\r\n                                    <br/>\r\n                                    <h5>Toss Decision</h5> <Switch checkedChildren=\"Batting\" unCheckedChildren=\"Chasing\" onChange={this.handleTossDecision}/>\r\n                                    {\r\n                                        (this.state.tossDecision !== \"\" & this.state.tossWinner !== \"\") ? (<div><br/><button className=\"download-btn\" onClick={this.oneOnOnePrediction}>Predict Match</button></div>) : \"\"\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className={`matchInfo ${(this.state.team1Selected !== \"\" & this.state.team2Selected !== \"\") ? \" \" : \"hidden\"}`}>\r\n                            <div className=\"card\" style={{width: `${this.view.getWidthAsPX(45)}px`}}>\r\n                                <div className=\"card-body\">\r\n                                        <h5 style={{fontFamily: \"Comfortaa\", color: \"blueviolet\", margin: \"1%\", marginBottom: \"3%\"}}>Match Making Info</h5>\r\n                                        Team One: <h6>{this.state.team1Selected}</h6>\r\n                                        Team Two: <h6>{this.state.team2Selected}</h6>\r\n                                        Toss Won by <h6>{this.state.tossWinner}</h6>\r\n                                        Toss Decision taken <h6>{this.state.tossDecision}</h6>\r\n                                        {\r\n                                            (this.state.predictedOneVsOne) ? (<div>Predicted Winner <h6>{this.state.winner}</h6></div>) : \"\"\r\n                                        }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className={`nextPredict ${(this.state.selectedTab.includes(\"NextPredict\")) ? \" \" : \"hidden\"}`}>\r\n                    <h4 className=\"header\" style={{marginTop:`${this.view.getWidthAsPX(2)}px`, marginBottom:`${this.view.getWidthAsPX(2)}px`}}>Lets Try and Predict for upcoming Seasons</h4>\r\n                    <p className=\"disclaimer\">Every prediction in Calculo is based on previous seasonal analysis and statistics provided to LSTM Neural Net</p>\r\n                    <p className=\"disclaimer\">For keeping UI minimal and simple to use, Some baises are predefined</p>\r\n                    <div>\r\n                        {\r\n                            (this.state.SchemaReady) ? this.SeasonalPrediction(\"2020\") : (<div><LoaderAnim /><h4>Loading Seasonal Prediction for year {\"2020\"}</h4></div>)\r\n                        }\r\n                        {\r\n                            (this.state.SchemaReady) ? this.SeasonalPrediction(\"2021\") : (<div><LoaderAnim /><h4>Loading Seasonal Prediction for year {\"2021\"}</h4></div>)\r\n                        }\r\n                        {\r\n                            (this.state.SchemaReady) ? this.SeasonalPrediction(\"2022\") : (<div><LoaderAnim /><h4>Loading Seasonal Prediction for year {\"2022\"}</h4></div>)\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className={`custom ${(this.state.selectedTab.includes(\"custom\")) ? \" \" : \"hidden\"}`}>\r\n                    <h4 className=\"header\" style={{marginTop:`${this.view.getWidthAsPX(2)}px`, marginBottom:`${this.view.getWidthAsPX(2)}px`}}>Performance Report After Several Seasons</h4>\r\n                    {\r\n                        <button className={`subnavButton ${(this.state.reportsAvailable) ? \"hidden\" : \"\"}`} onClick={this.getReportsData}>Generate Report</button>\r\n                    }\r\n                    {\r\n                        (this.state.reportsAvailable) ? this.generateReport() : (<div></div>)\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Predictions;","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './nav.css';\r\n\r\nclass NavBar extends Component {\r\n    \r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            isClicked: \"1\"\r\n        };\r\n\r\n        this.handleSelection = this.handleSelection.bind(this);\r\n    }\r\n\r\n    handleSelection(event) {\r\n        \r\n        const { id } = event.target;\r\n        console.log(id);\r\n        \r\n        this.setState({\r\n            isClicked: id\r\n        });\r\n        \r\n        \r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <nav className=\"navbar navbar-expand-lg\">\r\n\r\n                    <a className=\"navbar-brand\" href=\"#\">\r\n                        <h1 className=\"navbar-head\">Calculo <sub className=\"navbar-sub\">alpha</sub></h1>\r\n                    </a>\r\n\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <div className=\"nav-menu\">\r\n                            <ul className=\"navbar-nav mr-auto\">\r\n                                <li>\r\n                                    <Link to={'/'} className=\"nav-link\">\r\n                                        <button\r\n                                             id={1} \r\n                                             className={`navButton btn ${(this.state.isClicked.includes(\"1\")) ? \"active\" : \" \"}`}\r\n                                             onClick={this.handleSelection}\r\n                                        > Dataset </button>\r\n                                    </Link>\r\n                                </li>\r\n                                <li>\r\n                                    <Link to={'/predictions'} className=\"nav-link\">\r\n                                        <button \r\n                                            id={2}\r\n                                            className={`navButton btn ${(this.state.isClicked.includes(\"2\")) ? \"active\" : \" \"}`}\r\n                                            onClick={this.handleSelection}\r\n                                        >Predictions</button>\r\n                                    </Link>\r\n                                </li>\r\n                                <li>\r\n                                    <Link to={'/models'} className=\"nav-link\">\r\n                                        <button \r\n                                            id={3} \r\n                                            className={`navButton btn ${(this.state.isClicked.includes(\"3\")) ? \"active\" : \" \"}`}\r\n                                            onClick={this.handleSelection}\r\n                                        >Models</button>\r\n                                    </Link>\r\n                                </li>\r\n                                <li>\r\n                                    <Link to={'/about'} className=\"nav-link\">\r\n                                        <button \r\n                                            id={4} \r\n                                            className={`navButton btn ${(this.state.isClicked.includes(\"4\")) ? \"active\" : \" \"}`}\r\n                                            onClick={this.handleSelection}\r\n                                        >About</button>\r\n                                    </Link>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"userProfile row\">\r\n                        <div className=\"col center\">\r\n                            <p>Bhalaji SV</p>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <img id=\"propic\" src=\"./svb.jpeg\" alt=\"Avatar\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                </nav>\r\n          </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavBar;","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\n\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport About from './components/about/about';\r\nimport Dataset from './components/dataset/dataset';\r\nimport Models from './components/models/models';\r\nimport Predictions from './components/prediction/prediction';\r\nimport NavBar from './components/navbar/navbar';\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n            <NavBar />\r\n            <Switch>\r\n              <Route exact path='/' component={Dataset} />\r\n              <Route path='/predictions' component={Predictions} />\r\n              <Route path='/models' component={Models} />\r\n              <Route path='/about' component={About} />\r\n            </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}